<div class="d-flex flex-row">
    <EditForm EditContext="EditContext" OnValidSubmit="LoginAsync" class="col-12 col-lg-7" novalidate>
        <DataAnnotationsValidator/>
        <FluentValidationValidator/>

        <div class="text-start mb-2">
            <label for="username" class="form-label fw-bolder text-bg-white mb-0">
                Username
            </label>
            <InputText
                @bind-Value="Command.Username"
                class="form-control bg-white text-black"
                id="username"
                type="text"
                autocomplete="username"
                required autofocus/>
            <div class="invalid-feedback fw-bold">
                <ValidationMessage For="@(() => Command.Username)"/>
            </div>
        </div>

        <div class="text-start mb-3">
            <label for="password" class="form-label fw-bolder text-bg-white mb-0">
                Password
            </label>
            <InputText
                @bind-Value="Command.Password"
                class="form-control bg-white text-black"
                id="password"
                type="password"
                autocomplete="current-password"
                required autofocus/>
            <div class="invalid-feedback fw-bold">
                <ValidationMessage For="@(() => Command.Password)"/>
            </div>
            <div class="form-text">
                <a class="text-warning small" href="#" @onclick="@ChangeAuthStateToRecoverAsync">
                    Forgot your password?
                </a>
            </div>
        </div>

        <div class="text-center mb-3">
            <button type="submit" class="btn btn-primary w-100">
                Login
            </button>
        </div>

        <div class="text-start">
            <div class="col-auto px-0" aria-label="register">
                Don't have an account?
                <a class="text-primary" href="#" @onclick="@ChangeAuthStateToRegisterAsync">
                    Register
                </a>
            </div>
        </div>
    </EditForm>

    <div class="mx-auto"></div>

    <div class="col-4 d-none d-lg-flex m-1">
        <div class="d-flex flex-column justify-content-center align-items-center w-100 h-100">
            <div class="mb-2">
                <QrCode Value="https://youtu.be/dQw4w9WgXcQ"
                        Alt="QR Code"
                        Width="200"
                        Height="200"
                        PixelsPerModule="5"
                        class="rounded rounded-1"/>
            </div>

            <div class="fw-bold fs-4 text-bg-white">
                Log in with QR Code
            </div>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public EventCallback<AuthModalState> ChangeAuthState { get; set; }

    public EditContext EditContext { get; set; } = default!;

    public UserLoginCommand Command { get; set; }
        = new UserLoginCommand(string.Empty, string.Empty);

    protected override void OnInitialized()
    {
        base.OnInitialized();
        EditContext = BootstrapFormValidationClassProvider.CreateEditContextFor(Command);

        // fetch login code from the server, and start a timer to check to refresh the code every minute
    }

    private async Task ChangeAuthStateToRegisterAsync()
    {
        await ChangeAuthState.InvokeAsync(AuthModalState.Register);
    }

    private async Task ChangeAuthStateToRecoverAsync()
    {
        await ChangeAuthState.InvokeAsync(AuthModalState.Recover);
    }

    private void LoginAsync()
    {
        Console.WriteLine("submit");
    }
}