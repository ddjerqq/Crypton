@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="border border-1 border-primary rounded rounded-3 w-100 p-1">
        <table class="m-1 table">
            <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override Task OnInitializedAsync()
    {
        forecasts = new WeatherForecast[]
        {
            new WeatherForecast { Date = DateOnly.FromDateTime(DateTime.UtcNow), TemperatureC = 32, Summary = "cool" },
            new WeatherForecast { Date = DateOnly.FromDateTime(DateTime.UtcNow), TemperatureC = 32, Summary = "cool" },
            new WeatherForecast { Date = DateOnly.FromDateTime(DateTime.UtcNow), TemperatureC = 32, Summary = "cool" },
            new WeatherForecast { Date = DateOnly.FromDateTime(DateTime.UtcNow), TemperatureC = 32, Summary = "cool" },
            new WeatherForecast { Date = DateOnly.FromDateTime(DateTime.UtcNow), TemperatureC = 32, Summary = "cool" }
        };
        return Task.CompletedTask;
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

}